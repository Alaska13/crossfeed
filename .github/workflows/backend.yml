name: Backend Pipeline

on:
  push:
    branches:
      - master
      - production
    paths:
      - "backend/**"
      - ".github/workflows/backend.yml"

  pull_request:
    branches:
      - master
      - production
    paths:
      - "backend/**"
      - ".github/workflows/backend.yml"

defaults:
  run:
    working-directory: ./backend

jobs:
  security:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2.3.1
      - uses: actions/setup-node@v2.1.0
        with:
          node-version: "12.14"
      - name: Restore npm cache
        uses: actions/cache@v1
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - name: Install dependencies
        run: npm ci
      - name: Security
        run: npm audit
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2.3.1
      - uses: actions/setup-node@v2.1.0
        with:
          node-version: "12.14"
      - name: Restore npm cache
        uses: actions/cache@v1
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - name: Install dependencies
        run: npm ci
      - name: Lint
        run: npm run lint
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2.3.1
      - uses: actions/setup-node@v2.1.0
        with:
          node-version: "12.14"
      - name: Restore npm cache
        uses: actions/cache@v1
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - name: Install dependencies
        run: npm ci
      - name: Test
        run: npm run test
  deploy:
    needs: [security, lint, test]
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && (github.ref == 'refs/heads/master' || github.ref == 'refs/heads/production')
    steps:
      - uses: actions/checkout@v2.3.1
      - uses: actions/setup-node@v2.1.0
        with:
          node-version: "12.14"
      - name: Restore npm cache
        uses: actions/cache@v1
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - name: Install dependencies
        run: npm ci
      - name: Ensure domain existis - Staging
        if: github.ref == 'refs/heads/master'
        run: npx sls create_domain --stage=staging
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_KEY }}
          SLS_DEBUG: "*"


      - name: Deploy backend - Staging
        if: github.ref == 'refs/heads/master'
        run: npx sls deploy --stage=staging
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_KEY }}
          SLS_DEBUG: "*"

      - name: Ensure domain existis - Production
        if: github.ref == 'refs/heads/production'
        run: npx sls create_domain --stage=prod
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_KEY }}
          SLS_DEBUG: "*"

      - name: Deploy backend - Production
        if: github.ref == 'refs/heads/production'
        run: npx sls deploy --stage=prod
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_KEY }}
          SLS_DEBUG: "*"
